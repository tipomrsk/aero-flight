volumes:
  app:

services:
  # API
  app:
    image: app
    restart: always
    container_name: app
    working_dir: /var/www
    command: bash ./init.sh
    hostname: sandbox.aero-flight
    build:
      context: ../app
      dockerfile: Dockerfile
    volumes:
      - ../app:/var/www
    networks:
      - aero-flight-network
    depends_on:
      mysql:
        condition: service_healthy

  # Nginx
  nginx:
    restart: always
    image: nginx:alpine
    container_name: nginx
    volumes:
      - ../nginx/config/conf.d:/etc/nginx/conf.d
      - ../nginx/config/nginx.conf:/etc/nginx/nginx.conf
      - ../app:/var/www
    depends_on:
      - app
    ports:
      - 8000:80
    networks:
      - aero-flight-network

  # MySQL
  mysql:
    image: mysql:8.3.0
    restart: always
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: aero-flight
    ports:
      - 3306:3306
    networks:
      - aero-flight-network
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  # Redis Commander
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis-commander
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    restart: always
    networks:
      - aero-flight-network
    depends_on:
      - redis

  redis:
    image: redis:7.2.4
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    networks:
      - aero-flight-network
    depends_on:
      mysql:
        condition: service_healthy


  app-queue-worker:
    image: app
    container_name: app-queue-worker
    tty: true
    environment:
      SERVICE_NAME: app-queue-worker
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ../app:/var/www
    networks:
      - aero-flight-network
    command: php artisan queue:work --queue=default --sleep=3 --tries=3 --max-time=3600
    restart: always
    depends_on:
      - mysql
      - app
      - redis

networks:
  aero-flight-network:
    name: aero-flight-network
    driver: bridge